/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nghiem Quynh
 */
public class ListForm extends javax.swing.JFrame {

    static List<Product> products;
    static Product product;

    /**
     * Creates new form ListForm
     */
    public ListForm() {
        initComponents();
        products = new ArrayList<>();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblView = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        tfSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnAddToCart = new javax.swing.JButton();
        btnViewCart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Danh sách sản phẩm");

        tblView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblView);

        jLabel7.setText("Tìm kiếm:");

        tfSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSearchActionPerformed(evt);
            }
        });

        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnAddToCart.setText("Thêm vào giỏ hàng");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });

        btnViewCart.setText("Xem giỏ hàng");
        btnViewCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(42, 42, 42)
                                .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(btnSearch))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(btnAddToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnViewCart, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewCart, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        if (tfSearch.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập thông tin");
        } else {
            Main.connection.cnSQL("jdbc:mysql://localhost:3306/cinema", "root", "");
            String tvSQL2 = "select * from movies where name like N'%" + tfSearch.getText() + "%'";
            ResultSet rsdv = Main.connection.HienThongTin(tvSQL2);
            System.out.println(rsdv);
            Object[] obj = new Object[]{"STT", "Mã Phim", "Tên phim", "Số ghế", "Ngày chiếu", "Phòng Chiếu", "Giá vé"};
            DefaultTableModel tableModel = new DefaultTableModel(obj, 0);
            tblView.setModel(tableModel);
            int c = 0;
            try {
                while (rsdv.next()) {
                    c++;
                    Object[] item = new Object[7];
                    item[0] = c;
                    item[1] = rsdv.getInt("id");
                    item[2] = rsdv.getString("name");
                    item[3] = rsdv.getInt("seat");
                    item[4] = rsdv.getString("date");
                    item[5] = rsdv.getInt("room");
                    item[6] = rsdv.getInt("price");
                    tableModel.addRow(item);
                }
            } catch (SQLException ex) {
                System.out.println(ex.toString());
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        openQuantitySelectionForm();
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void btnViewCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCartActionPerformed
        if (!products.isEmpty()) {
            CartForm infoForm = new CartForm();
            infoForm.setVisible(true);
            infoForm.setData(products);
        } else {
            JOptionPane.showMessageDialog(null, "Giỏ hàng chưa có sản phẩm");
        }

    }//GEN-LAST:event_btnViewCartActionPerformed

    private void tfSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSearchActionPerformed

    static void setData() {
        ListForm infoForm = new ListForm();
        infoForm.setVisible(true);
        Main.connection.cnSQL("jdbc:mysql://14.225.211.190:3306/market-card", "root", "sonha12");
//        String tvSQL2 = "select * from movies";
//        ResultSet rsdv = Main.connection.HienThongTin(tvSQL2);
//        List<Object[]> data = convertResultSetToList(rsdv);
//        System.out.println(rsdv);

        List<Object[]> data = new ArrayList<>();
        data.add(new Object[]{1, "Product 1", "Bánh", "1", "100000"});
        data.add(new Object[]{2, "Product 2", "Kẹo", "2", "200000"});
        data.add(new Object[]{3, "Product 3", "Sữa", "1", "15000"});
        Object[] obj = new Object[]{"STT", "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Đơn giá"};
//        DefaultTableModel tableModel = new DefaultTableModel(obj, 0);
        AbstractTableModel tableModel = new AbstractTableModel() {
            @Override
            public int getRowCount() {
                return data.size();
            }

            @Override
            public int getColumnCount() {
                return obj.length;
            }

            @Override
            public Object getValueAt(int row, int column) {
                return data.get(row)[column];
            }

            @Override
            public String getColumnName(int column) {
                return obj[column].toString();
            }
        };
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        infoForm.tblView.setDefaultRenderer(Object.class, centerRenderer);

        infoForm.tblView.setModel(tableModel);

        infoForm.tblView.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int selectedRow = infoForm.tblView.getSelectedRow();

                // Get the number of columns in the table
                int columnCount = infoForm.tblView.getColumnCount();

                // Create an array to hold the values of the selected row
                Object[] rowValues = new Object[columnCount];

                // Retrieve the values from each column of the selected row
                for (int col = 0; col < columnCount; col++) {
                    rowValues[col] = infoForm.tblView.getValueAt(selectedRow, col);
                }

                // Perform your logic based on the values of the selected row
                System.out.println("Clicked Row Values: " + Arrays.toString(rowValues));

                product = new Product();
//                product.setStt(rowValues[0].toString());
                product.setId(rowValues[1].toString());
                product.setName(rowValues[2].toString());
                product.setMaxItem(rowValues[3].toString());
                product.setPrice(rowValues[4].toString());

//                products.add(product);
            }
        });
    }

    private void openQuantitySelectionForm() {
        if (product != null) {
            QuantitySelectionForm quantityForm = new QuantitySelectionForm(product, new QuantitySelectionListener() {
                @Override
                public void onQuantitySelected(Product product) {
                    System.out.println("Selected Product: " + product.getName() + ", Quantity: " + product.getQuantity());
                    products.add(product);
                     JOptionPane.showMessageDialog(null, "Thêm sản phảm vào giỏ hàng thành công");
                }
            });
            quantityForm.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Chưa chọn sản phẩm nào");
        }
    }

    public List<Object[]> convertResultSetToList(ResultSet resultSet) throws SQLException {
        List<Object[]> dataList = new ArrayList<>();
        ResultSetMetaData metaData = resultSet.getMetaData();
        int columnCount = metaData.getColumnCount();
        while (resultSet.next()) {
            Object[] row = new Object[columnCount];
            for (int i = 1; i <= columnCount; i++) {
                row[i - 1] = resultSet.getObject(i);
            }
            dataList.add(row);
        }

        return dataList;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnViewCart;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblView;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
